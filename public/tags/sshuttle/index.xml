<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sshuttle on Adam Israel</title>
    <link>http://adamisrael.com/tags/sshuttle/</link>
    <description>Recent content in Sshuttle on Adam Israel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2016 Adam Israel</copyright>
    <lastBuildDate>Fri, 12 Dec 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://adamisrael.com/tags/sshuttle/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>sshuttle workaround for OS X 10.10 (Yosemite), Juju and Vagrant</title>
      <link>http://adamisrael.com/blog/2014/12/12/sshuttle-workaround-for-os-x-10-10-yosemite-juju-and-vagrant/</link>
      <pubDate>Fri, 12 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://adamisrael.com/blog/2014/12/12/sshuttle-workaround-for-os-x-10-10-yosemite-juju-and-vagrant/</guid>
      <description>&lt;p class=&#34;p2&#34;&gt;
  &lt;a href=&#34;https://github.com/sshuttle/sshuttle&#34;&gt;sshuttle&lt;/a&gt; is a nifty little transparent proxy/vpn that works by tunneling TCP traffic over SSH, or more specifically, tearing down a TCP session and reassembling the data on the other side. I started using it earlier this year, as part of my workflow using &lt;a href=&#34;https://juju.ubuntu.com/&#34;&gt;Juju&lt;/a&gt; and developing under OS X. It&amp;#8217;s like a data center in a box, inside another box. Code locally in my editor of choice (vim, TextMate, and more recently, Atom). Deploy new code. Refresh web browser, thanks to sshuttle. With sshuttle, I could connect to the services running within my virtual machine running Ubuntu natively through OS X.
&lt;/p&gt;

&lt;p class=&#34;p2&#34;&gt;
  Until I upgraded to Yosemite (OS X 10.10).
&lt;/p&gt;

&lt;p class=&#34;p2&#34;&gt;
  ipfw, the FreeBSD ip packet filter, was replaced by OpenBSD&amp;#8217;s pf in OS X 10.7, but the binary lived on through 10.9. sshuttle has no support for pf, which led me googling down a spiraling trail of despair and hope that someone, some day, would patch sshuttle.
&lt;/p&gt;

&lt;p class=&#34;p2&#34;&gt;
  I&amp;#8217;m more familiar with iptables than either ipfw or pf, but I understand enough networking to know that ubuntu-in-a-virtual-machine was already setup to talk to the outside world. I figured that there must be something more obvious than setting up a poor man&amp;#8217;s VPN to talk to it.
&lt;/p&gt;

&lt;p class=&#34;p2&#34;&gt;
  A few hours of testing later, I had a working solution using the route command.
&lt;/p&gt;

&lt;pre class=&#34;lang:sh decode:true &#34;&gt;$ sudo route add -net 10.0.3.0/24 172.16.250.15&lt;/pre&gt;

&lt;p&gt;The lxc containers run on the 10.0.3.0 network, and the lxc host (always, in the official Vagrant image) has eth1 bound to 172.16.250.15.&lt;/p&gt;

&lt;p&gt;There&amp;#8217;s a few ways I could have implemented this. I could have made it a static route, always active, but that could lead to unintended side-effects if you were to join a network using the same ip range. Same logic rules out adding it to my ~/.bash_profile. I ended up finding vagrant-triggers, which allows you to run custom commands at various stages of the vagrant lifecycle. With that, I can add the route when I boot up a virtual machine, and remove it when I&amp;#8217;ve shut it down.&lt;/p&gt;

&lt;p class=&#34;p2&#34;&gt;
  While I can confirm that it works for me, I can&amp;#8217;t say how well it&amp;#8217;ll work for other use cases of sshuttle or earlier versions of OS X. Juju users can head over to the &lt;a href=&#34;https://juju.ubuntu.com/docs/howto-vagrant-workflow.html&#34;&gt;Vagrant Workflow&lt;/a&gt; docs for the latest and greatest, or read on for the &lt;a href=&#34;https://gist.github.com/AdamIsrael/cc51d3d704c18095f718&#34;&gt;gist&lt;/a&gt;.
&lt;/p&gt;

&lt;p class=&#34;p2&#34;&gt;
  
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p class=&#34;p3&#34;&gt;

&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>