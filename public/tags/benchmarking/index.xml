<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Benchmarking on Adam Israel</title>
    <link>http://adamisrael.com/tags/benchmarking/</link>
    <description>Recent content in Benchmarking on Adam Israel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2016 Adam Israel</copyright>
    <lastBuildDate>Thu, 02 Jun 2016 13:42:46 -0400</lastBuildDate>
    
	<atom:link href="http://adamisrael.com/tags/benchmarking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Perfkit and Juju</title>
      <link>http://adamisrael.com/2016/06/02/perfkit-and-juju/</link>
      <pubDate>Thu, 02 Jun 2016 13:42:46 -0400</pubDate>
      
      <guid>http://adamisrael.com/2016/06/02/perfkit-and-juju/</guid>
      <description>State the problem
Performance is hard. That&amp;rsquo;s why there are so many tools to measure it. Getting to the bottom of the performance monkey barrel requires a deft hand and good aim. Requirements change, hardware is in flux, and bottlenecks shift.
Solution is benchmarking
Performance is hard, but benchmarking isn&amp;rsquo;t (or shouldn&amp;rsquo;t be). There are many tools to do it, and we&amp;rsquo;ve had an emergence of benchmarking suites, like the Phoronix Test Suite, that collect individual benchmarks into one package.</description>
    </item>
    
    <item>
      <title>Announcing Benchmarking with Juju</title>
      <link>http://adamisrael.com/blog/2015/06/23/announcing-benchmarking-with-juju/</link>
      <pubDate>Tue, 23 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://adamisrael.com/blog/2015/06/23/announcing-benchmarking-with-juju/</guid>
      <description>Benchmarking and performance are interesting problems, especially in today’s growing cloud-based microservice scene. It used to be a question of “how does this hardware compare to that hardware,” but as computing and service-oriented architectures grow the question has evolved. How does my cloud and application stack handle this? It’s no longer enough to run PTS on your web server and call it a day.
Measuring every microservice in your stack, from backend to frontend, is a complex task.</description>
    </item>
    
  </channel>
</rss>