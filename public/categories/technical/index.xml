<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical on Adam Israel</title>
    <link>http://adamisrael.com/categories/technical/</link>
    <description>Recent content in Technical on Adam Israel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2016 Adam Israel</copyright>
    <lastBuildDate>Thu, 02 Jun 2016 13:42:46 -0400</lastBuildDate>
    
	<atom:link href="http://adamisrael.com/categories/technical/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Perfkit and Juju</title>
      <link>http://adamisrael.com/2016/06/02/perfkit-and-juju/</link>
      <pubDate>Thu, 02 Jun 2016 13:42:46 -0400</pubDate>
      
      <guid>http://adamisrael.com/2016/06/02/perfkit-and-juju/</guid>
      <description>State the problem
Performance is hard. That&amp;rsquo;s why there are so many tools to measure it. Getting to the bottom of the performance monkey barrel requires a deft hand and good aim. Requirements change, hardware is in flux, and bottlenecks shift.
Solution is benchmarking
Performance is hard, but benchmarking isn&amp;rsquo;t (or shouldn&amp;rsquo;t be). There are many tools to do it, and we&amp;rsquo;ve had an emergence of benchmarking suites, like the Phoronix Test Suite, that collect individual benchmarks into one package.</description>
    </item>
    
    <item>
      <title>bzr &#34;Insecure string pickle&#34;</title>
      <link>http://adamisrael.com/2016/05/06/bzr-insecure-string-pickle/</link>
      <pubDate>Fri, 06 May 2016 08:34:39 -0400</pubDate>
      
      <guid>http://adamisrael.com/2016/05/06/bzr-insecure-string-pickle/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been bit by a bug in the &lt;code&gt;bzr&lt;/code&gt; source code control system where running a commit
throws an ugly stack trace blaming an &amp;ldquo;insecure string pickle&amp;rdquo;, but I&amp;rsquo;ve found a workaround.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrating to Hugo</title>
      <link>http://adamisrael.com/2016/03/15/migrating-to-hugo/</link>
      <pubDate>Tue, 15 Mar 2016 18:47:58 -0400</pubDate>
      
      <guid>http://adamisrael.com/2016/03/15/migrating-to-hugo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;1&#34;&gt;Hugo&lt;/a&gt;, the static website engine, not the &lt;a href=&#34;2&#34;&gt;award&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve grown frustrated with Wordpress and Dreamhost. Running a Wordpress site
on a shared web host is a ticking time bomb. More users crowded on a server. I
threw turned on caching and Cloudflare; readers should have had little trouble
using the site, but my sessions were consistently timing out while using the
admin dashboard, which makes posting new content a frustrating experience.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu on Mac</title>
      <link>http://adamisrael.com/blog/2015/10/15/ubuntu-on-mac/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://adamisrael.com/blog/2015/10/15/ubuntu-on-mac/</guid>
      <description>I recently rebuilt a Mac Mini to work as the forth screen in my workflow. I googled around and pieced together what I needed to do by cherrypicking from various guides, and everything was running well until I updated to a new kernel and rebooted. I spent the better part of two nights trying to get the machine to boot.
Unfortunately, it happened just after I blacklisted a module to work around a USB bug that was causing one of my drives to go haywire occasionally, and it took a while before I finally figured out it wasn&amp;#8217;t a problem with my change but the kernel itself.</description>
    </item>
    
    <item>
      <title>Announcing Benchmarking with Juju</title>
      <link>http://adamisrael.com/blog/2015/06/23/announcing-benchmarking-with-juju/</link>
      <pubDate>Tue, 23 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://adamisrael.com/blog/2015/06/23/announcing-benchmarking-with-juju/</guid>
      <description>Benchmarking and performance are interesting problems, especially in today’s growing cloud-based microservice scene. It used to be a question of “how does this hardware compare to that hardware,” but as computing and service-oriented architectures grow the question has evolved. How does my cloud and application stack handle this? It’s no longer enough to run PTS on your web server and call it a day.
Measuring every microservice in your stack, from backend to frontend, is a complex task.</description>
    </item>
    
    <item>
      <title>sshuttle workaround for OS X 10.10 (Yosemite), Juju and Vagrant</title>
      <link>http://adamisrael.com/blog/2014/12/12/sshuttle-workaround-for-os-x-10-10-yosemite-juju-and-vagrant/</link>
      <pubDate>Fri, 12 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://adamisrael.com/blog/2014/12/12/sshuttle-workaround-for-os-x-10-10-yosemite-juju-and-vagrant/</guid>
      <description>&lt;p class=&#34;p2&#34;&gt;
  &lt;a href=&#34;https://github.com/sshuttle/sshuttle&#34;&gt;sshuttle&lt;/a&gt; is a nifty little transparent proxy/vpn that works by tunneling TCP traffic over SSH, or more specifically, tearing down a TCP session and reassembling the data on the other side. I started using it earlier this year, as part of my workflow using &lt;a href=&#34;https://juju.ubuntu.com/&#34;&gt;Juju&lt;/a&gt; and developing under OS X. It&amp;#8217;s like a data center in a box, inside another box. Code locally in my editor of choice (vim, TextMate, and more recently, Atom). Deploy new code. Refresh web browser, thanks to sshuttle. With sshuttle, I could connect to the services running within my virtual machine running Ubuntu natively through OS X.
&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Making OS X, Go, and Brew play happy</title>
      <link>http://adamisrael.com/blog/2014/11/13/making-os-x-go-and-brew-play-happy/</link>
      <pubDate>Thu, 13 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://adamisrael.com/blog/2014/11/13/making-os-x-go-and-brew-play-happy/</guid>
      <description>GO and OS X I&amp;#8217;m doing a little hacking with juju actions before they land in a stable release but I ran into some hurdles getting Go working with the brew-installed version. Trying to install Go packages failed with a bunch of &amp;#8216;unrecognized import path&amp;#8217; errors. Here&amp;#8217;s how I fixed it.
STOP, GO, STOP Even though you can install Go via brew, there&amp;#8217;s more to be done to get it working.</description>
    </item>
    
    <item>
      <title>A brief introduction to Juju</title>
      <link>http://adamisrael.com/blog/2014/09/03/a-brief-introduction-to-juju/</link>
      <pubDate>Wed, 03 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://adamisrael.com/blog/2014/09/03/a-brief-introduction-to-juju/</guid>
      <description>I had some concerns about how I was going to integrate posts of a technical nature with my blog, which has been predominantly writing-oriented for several years. What I failed take into account is that many of us who write Science Fiction are armchair technologists. We look at gadgets, scientific breakthroughs and tech policy, and make conjecture about what might come next.
What I talk about is less important than how I talk about it.</description>
    </item>
    
    <item>
      <title>New job!</title>
      <link>http://adamisrael.com/blog/2014/08/25/new-job/</link>
      <pubDate>Tue, 26 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://adamisrael.com/blog/2014/08/25/new-job/</guid>
      <description>I am delighted &amp;#8212; tickled, in fact &amp;#8212; to report that as of last Monday I am employed by Canonical, the company behind Ubuntu Linux.
I&amp;#8217;ve joined the Ecosystem Engineering team, part of Cloud Development and Operations, as a software engineer. More specifically, I&amp;#8217;m working on Juju, the cloud orchestration tool chain. I&amp;#8217;ll be writing charms and documentation, working on optimizations, and helping to make a cool product even cooler.</description>
    </item>
    
    <item>
      <title>Q&amp;A: Why is Scrivener using my old contact information?</title>
      <link>http://adamisrael.com/blog/2014/07/31/qa-why-is-scrivener-using-my-old-contact-information/</link>
      <pubDate>Thu, 31 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://adamisrael.com/blog/2014/07/31/qa-why-is-scrivener-using-my-old-contact-information/</guid>
      <description>For the past few years, I&amp;#8217;ve had to manually update the contact information in the header of every Scrivener project I&amp;#8217;ve created. It was defaulting to an old email and physical address, but somehow had the correct phone number.
Scrivener can pull your contact information from the OS X application Contacts, if you add the string &amp;#8220;(Scrivener:UseMe)&amp;#8221; to the notes of your contact card. As it turns out, I had done that already but my card has all of my email addresses (work and home) as well as my current and past physical addresses.</description>
    </item>
    
  </channel>
</rss>